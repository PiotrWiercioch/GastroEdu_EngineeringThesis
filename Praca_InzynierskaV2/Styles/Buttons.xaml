<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Praca_InzynierskaV2">
   
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Hoverless button -->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- System Icon Button -->
    <Style TargetType="{x:Type Button}" x:Key="SystemIconButton" BasedOn="{StaticResource Hoverless}">

        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Padding" Value="10" />

    </Style>

    <!-- Window Control Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="13" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    
    <!-- Window Min Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowMinButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#4A83E9" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Window Max Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowMaxButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#35BC11" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Window Close Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Menu Button -->
    <Style TargetType="{x:Type Button}" x:Key="MenuButton">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="190" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#5186A5" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Info Button -->
    <Style TargetType="{x:Type Button}" x:Key="InfoButton">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="50" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontSize" Value="24" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Button without border -->
    <Style TargetType="{x:Type Button}" x:Key="ButtonWithoutBorder">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="28" />
        <Setter Property="Width" Value="100" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button with border -->
    <Style TargetType="{x:Type Button}" x:Key="ButtonWithBorder">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="100" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{StaticResource ForegroundMainBrush}" BorderThickness="1">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Window Add Button -->
    <Style TargetType="{x:Type Button}" x:Key="AddButton" BasedOn="{StaticResource ButtonWithoutBorder}">
        <Style.Setters>
            <Setter Property="Background" Value="LightSeaGreen" />
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Background" Value="#FF1C9A93"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>
    <!-- Window Edit Button -->
    <Style TargetType="{x:Type Button}" x:Key="EditButton" BasedOn="{StaticResource ButtonWithoutBorder}">
        <Style.Setters>
            <Setter Property="Background" Value="#0099ff" />
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Background" Value="#FF017ED1"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>
    <!-- Window Delete Button -->
    <Style TargetType="{x:Type Button}" x:Key="DeleteButton" BasedOn="{StaticResource ButtonWithoutBorder}">
        <Style.Setters>
            <Setter Property="Background" Value="Red"/>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Background" Value="#FFCE0000" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Window Clear Button -->
    <Style TargetType="{x:Type Button}" x:Key="ClearButton" BasedOn="{StaticResource ButtonWithoutBorder}">
        <Style.Setters>
            <Setter Property="Background" Value="#051588" />
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Background" Value="#FF010E71"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Window Back Button -->
    <Style TargetType="{x:Type Button}" x:Key="BackButton" BasedOn="{StaticResource ButtonWithoutBorder}">
        <Style.Setters>
            <Setter Property="Background" Value="#FFA3A3A3" />
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontSize" Value="15" />
                <Setter Property="Background" Value="#FF909090"/>
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Login Button -->
    <Style TargetType="{x:Type Button}" x:Key="LoginButton" BasedOn="{StaticResource ButtonWithBorder}">
        <Style.Setters>
            <Setter Property="Width" Value="150"/>
        </Style.Setters>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontSize" Value="16" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <!-- Report Button -->
    <Style TargetType="{x:Type Button}" x:Key="ReportButton" BasedOn="{StaticResource ButtonWithBorder}">
        <Style.Setters>
            <Setter Property="Width" Value="350"/>
            <Setter Property="Height" Value="150"/>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF464646" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Storehous Button -->
    <Style TargetType="{x:Type Button}" x:Key="StorehousButton" BasedOn="{StaticResource ButtonWithBorder}">
        <Style.Setters>
            <Setter Property="Width" Value="450"/>
            <Setter Property="Height" Value="550"/>
            <Setter Property="FontSize" Value="50"/>
        </Style.Setters>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF464646" />
                <Setter Property="Foreground" Value="{StaticResource ForegroundLightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type RadioButton}" x:Key="NiceRadioButton" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="White" Cursor="Hand">
                        <BulletDecorator.Bullet>
                            <Grid Height="16" Width="16">
                                <Border Name="RadioOuter" Background="Transparent" BorderBrush="Gainsboro" BorderThickness="2" CornerRadius="2" />
                                <Border CornerRadius="0" Margin="4" Name="RadioMark" Background="#FFADADAD" Visibility="Hidden" />
                            </Grid>
                        </BulletDecorator.Bullet>

                        <TextBlock >
                            <ContentPresenter />
                        </TextBlock>
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="RadioOuter" Property="BorderBrush" Value="#FFADADAD" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}" x:Key="NiceComboBox" BasedOn="{StaticResource BaseStyle}">
        <Style.Resources>
            <Style TargetType="{x:Type Border}">
                <Setter Property="CornerRadius" Value="2" />
            </Style>
        </Style.Resources>
        <Setter Property="Foreground" Value="{StaticResource ForegroundMainBrush}" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

</ResourceDictionary>